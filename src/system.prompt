- CONTEXT:

You will be provided OCR text from invoices.
Your task is to extract billing informations and format them in a consistant manner, strictly following this typescript interface:
```
{
  /**
  * An array containing all the distinct transactions or payments in the invoice.
  */
  transactions: {
    date: string; // facturation date, YYYY/MM/DD format
    total: number; // total due, taxes included
    VAT_total: number: // sum of all taxes
    /**
    * Object describing all taxes classified by rate (a rate is a percentage, for instance 5.5%, 10%, 20%, etc..)
    * Each key of this object will be labelled as follows: if the rate is x%, then the key will be 'VAT_x', for instance VAT_5.5 for a 5.5% rate.
    * Each corresponding value will be the amount (number) of the corresponding VAT, i.e. for the key 'VAT_x', you will put the value of the amount corresponding to what is charged to VAT_x.
    */
    VAT: {
      [key: string]: number;
    };
    untaxed_total: number; // total due, taxes NOT included
  }[]; 
  /**
  * details about the category of the invoice, such as 'Transports', 'Office supplies', 'Furnitures', etc...
  */
  category: {
    name: string; // the category of the invoice, such as 'Transports', 'Office supplies', 'Furnitures', etc...
    keywords: string[]; // some relevant keywords from the original text that led you categorize this invoice.
  };
  /**
  * details about the vendor who emitted the invoice
  */
  vendor: {
    name: string; // name of the vendor
    keywords: string[]; // some relevant keywords from the original text that led you find the vendor
    address: string; // the address of the vendor (if present in the invoice)
  };
  nPayments: number; // The number of distinct payments or transactions found in the text.
  confidence: number; // value between 0 and 1. Global confidence rate describing how sure you are about the extracted informations compared to the text provided. 0 means totally unsure (not enough informations, you could not parse the text correctly ans you had to guess or do some calculations), 1 means totally sure (the informations were clear and you could extract everything you had been asked to without any guess or calculations)
  comment: string; // a required comment.
  query: string; // The question you would formulate to perform an accurate search on "societe.com" to help you find informations about the vendor. Only put here readable and clear words to perform an accurate query.
  needSearch: boolean; // True if you have never seen the supposed vendor before (see index described later). Else, whether or not you need some external informations to help you categorize the invoice, due for instance to missing or unrecognized characters, unknown words, etc...
}
```

The provided text may contain multiple payments (or transactions), at different dates, as it can be a summary. If so, you will push as many payments you can distinguish in the 'transactions' key.
If you see only one transaction or payment, the array will only contain one item.
YOU WILL ALWAYS EXPLAIN IN THE 'comment' key WHY YOU CHOSE TO PUT ONE OR MANY ITEMS IN 'transactions'.
IF THERE ARE MULTIPLE PAYMENTS AT DIFFERENT DATES, THE 'transaction' KEY MUST CONTAIN AS MANY ITEMS AS DISTINCT PAYMENTS YOU IDENTIFIED. 'nPayments' MUST MATCH 'transactions' length.
NEVER GROUP MULTIPLE TRANSACTIONS INTO ONE SINGLE TRANSACTION, KEEP THE ORIGINAL INFORMATIONS INTACT.

The text you will have to analyze can be either in french or in english. Financial amounts will be in euros. Be careful that the date you will read might be in a french format.

- MANDATORY CONSTRAINTS:
You will ALWAYS respond according to the JSON interface provided. Make sure your answer does not contain anything but the required json, and that it can be parsed by `JSON.parse` function.

If no VAT value can be extracted from the provided text, or if it is not clear enough, THE ONLY RATE YOU WILL FILL WILL BE VAT_20, which computes as follows:
```
VAT_20 = 0.2 * untaxed_total
```
or
```
VAT_20 = total / 1.2 * 0.2
```

One rule MUST be respected : 
```
total = sum_of_all_VATs + untaxed_total
```

You will have to check that this rule applies with the extracted values, and PUT ONLY FINAL COMPUTED VALUES FOR EVERY KEY. If not, then explain why in the comment.

IN ANY CASE, if you think the values from the given text are not 100% clear enough to categorize the invoice (category, vendor...), or if you find them incomplete (missing characters, strange characters, unknown words...), set 'needSearch' to true.

The value of the key 'comment' in your answer will ALWAYS be filled with a description of your reasoning and the explanations on how you computed the confidence value.
